// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB565 0xdcaeaf82
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _Group2823[];
extern const unsigned char _Group2824[];
extern const unsigned char _blue_buttons_round_icon_button[];
extern const unsigned char _blue_buttons_round_icon_button_pressed[];
extern const unsigned char _blue_buttons_square_icon_button[];
extern const unsigned char _blue_buttons_square_icon_button_pressed[];
extern const unsigned char _blue_slider_horizontal_medium_indicators_slider_round_edge_nob[];
extern const unsigned char _blue_slider_horizontal_medium_slider_round_edge_back[];
extern const unsigned char _blue_slider_horizontal_medium_slider_round_edge_fill[];
extern const unsigned char _butdown[];
extern const unsigned char _butup[];
extern const unsigned char _down[];
extern const unsigned char _down1[];
extern const unsigned char _down2[];
extern const unsigned char _down_r[];
extern const unsigned char _down_r2[];
extern const unsigned char _reset[];
extern const unsigned char _reset1[];
extern const unsigned char _save[];
extern const unsigned char _save2[];
extern const unsigned char _snooze[];
extern const unsigned char _snooze2[];
extern const unsigned char _start[];
extern const unsigned char _start1[];
extern const unsigned char _stop[];
extern const unsigned char _stop1[];
extern const unsigned char _up[];
extern const unsigned char _up1[];
extern const unsigned char _up2[];
extern const unsigned char _up_r[];
extern const unsigned char _up_r2[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _Group2823, 0, 108, 38, 13, 2, 82, 34, touchgfx::Bitmap::ARGB8888 },
    { _Group2824, 0, 108, 38, 13, 2, 82, 34, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_icon_button, 0, 60, 60, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_round_icon_button_pressed, 0, 60, 60, 13, 11, 34, 36, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_square_icon_button, 0, 60, 60, 5, 4, 50, 50, touchgfx::Bitmap::ARGB8888 },
    { _blue_buttons_square_icon_button_pressed, 0, 60, 60, 5, 4, 50, 50, touchgfx::Bitmap::ARGB8888 },
    { _blue_slider_horizontal_medium_indicators_slider_round_edge_nob, 0, 48, 48, 4, 3, 40, 40, touchgfx::Bitmap::ARGB8888 },
    { _blue_slider_horizontal_medium_slider_round_edge_back, 0, 352, 15, 3, 0, 346, 14, touchgfx::Bitmap::ARGB8888 },
    { _blue_slider_horizontal_medium_slider_round_edge_fill, 0, 352, 15, 3, 1, 346, 12, touchgfx::Bitmap::ARGB8888 },
    { _butdown, 0, 108, 38, 13, 2, 82, 34, touchgfx::Bitmap::ARGB8888 },
    { _butup, 0, 108, 38, 13, 2, 82, 34, touchgfx::Bitmap::ARGB8888 },
    { _down, 0, 108, 38, 13, 2, 82, 34, touchgfx::Bitmap::ARGB8888 },
    { _down1, 0, 31, 27, 8, 0, 15, 13, touchgfx::Bitmap::ARGB8888 },
    { _down2, 0, 31, 27, 8, 0, 15, 13, touchgfx::Bitmap::ARGB8888 },
    { _down_r, 0, 27, 31, 0, 8, 13, 15, touchgfx::Bitmap::ARGB8888 },
    { _down_r2, 0, 27, 31, 0, 8, 13, 15, touchgfx::Bitmap::ARGB8888 },
    { _reset, 0, 108, 38, 11, 2, 86, 34, touchgfx::Bitmap::ARGB8888 },
    { _reset1, 0, 108, 38, 11, 2, 86, 34, touchgfx::Bitmap::ARGB8888 },
    { _save, 0, 38, 108, 2, 13, 34, 82, touchgfx::Bitmap::ARGB8888 },
    { _save2, 0, 38, 108, 2, 13, 34, 82, touchgfx::Bitmap::ARGB8888 },
    { _snooze, 0, 108, 38, 11, 2, 86, 34, touchgfx::Bitmap::ARGB8888 },
    { _snooze2, 0, 108, 38, 11, 2, 86, 34, touchgfx::Bitmap::ARGB8888 },
    { _start, 0, 108, 38, 11, 2, 86, 34, touchgfx::Bitmap::ARGB8888 },
    { _start1, 0, 108, 38, 11, 2, 86, 34, touchgfx::Bitmap::ARGB8888 },
    { _stop, 0, 108, 38, 11, 2, 86, 34, touchgfx::Bitmap::ARGB8888 },
    { _stop1, 0, 108, 38, 11, 2, 86, 34, touchgfx::Bitmap::ARGB8888 },
    { _up, 0, 108, 38, 11, 2, 86, 34, touchgfx::Bitmap::ARGB8888 },
    { _up1, 0, 31, 27, 8, 14, 15, 13, touchgfx::Bitmap::ARGB8888 },
    { _up2, 0, 31, 27, 8, 14, 15, 13, touchgfx::Bitmap::ARGB8888 },
    { _up_r, 0, 27, 31, 14, 8, 13, 15, touchgfx::Bitmap::ARGB8888 },
    { _up_r2, 0, 27, 31, 14, 8, 13, 15, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

