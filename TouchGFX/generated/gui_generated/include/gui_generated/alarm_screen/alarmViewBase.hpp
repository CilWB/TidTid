/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef ALARM_VIEW_BASE_HPP
#define ALARM_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/alarm_screen/alarmPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/Button.hpp>

class alarmViewBase : public touchgfx::View<alarmPresenter>
{
public:
    alarmViewBase();
    virtual ~alarmViewBase() {}

    virtual void setupScreen();

    /*
     * Custom Action Handlers
     */
    virtual void downMin()
    {
        // Override and implement this function in alarmView
    }

    virtual void upMin()
    {
        // Override and implement this function in alarmView
    }

    virtual void downHour()
    {
        // Override and implement this function in alarmView
    }

    virtual void upHour()
    {
        // Override and implement this function in alarmView
    }

    virtual void saveAlram()
    {
        // Override and implement this function in alarmView
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box1;
    touchgfx::TextArea ALARM;
    touchgfx::TextAreaWithOneWildcard minutes_val;
    touchgfx::TextArea colon;
    touchgfx::TextAreaWithOneWildcard hour_val;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButton1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButton1_1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButton1_2;
    touchgfx::Button up_h;
    touchgfx::Button down_h;
    touchgfx::Button up_min;
    touchgfx::Button down_min;
    touchgfx::Button save;

    /*
     * Wildcard Buffers
     */
    static const uint16_t MINUTES_VAL_SIZE = 3;
    touchgfx::Unicode::UnicodeChar minutes_valBuffer[MINUTES_VAL_SIZE];
    static const uint16_t HOUR_VAL_SIZE = 3;
    touchgfx::Unicode::UnicodeChar hour_valBuffer[HOUR_VAL_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<alarmViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<alarmViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

};

#endif // ALARM_VIEW_BASE_HPP
