/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/count_down_screen/count_downViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

count_downViewBase::count_downViewBase() :
    buttonCallback(this, &count_downViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &count_downViewBase::flexButtonCallbackHandler)
{
    box1.setPosition(0, 0, 480, 272);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(29, 29, 29));

    minutes_val.setPosition(134, 101, 93, 98);
    minutes_val.setColor(touchgfx::Color::getColorFrom24BitRGB(218, 19, 19));
    minutes_val.setLinespacing(0);
    minutes_val.setRotation(TEXT_ROTATE_180);
    Unicode::snprintf(minutes_valBuffer, MINUTES_VAL_SIZE, "%s", TypedText(T_SINGLEUSEID122).getText());
    minutes_val.setWildcard(minutes_valBuffer);
    minutes_val.setTypedText(TypedText(T_SINGLEUSEID121));

    colon.setXY(229, 66);
    colon.setColor(touchgfx::Color::getColorFrom24BitRGB(218, 19, 19));
    colon.setLinespacing(0);
    colon.setTypedText(TypedText(T_SINGLEUSEID123));

    sec_val.setPosition(251, 101, 93, 98);
    sec_val.setColor(touchgfx::Color::getColorFrom24BitRGB(218, 19, 19));
    sec_val.setLinespacing(0);
    sec_val.setRotation(TEXT_ROTATE_180);
    Unicode::snprintf(sec_valBuffer, SEC_VAL_SIZE, "%s", TypedText(T_SINGLEUSEID125).getText());
    sec_val.setWildcard(sec_valBuffer);
    sec_val.setTypedText(TypedText(T_SINGLEUSEID124));

    down.setXY(186, 218);
    down.setBitmaps(Bitmap(BITMAP_DOWNNNN_ID), Bitmap(BITMAP_UPP_ID));

    reset_but.setXY(186, 10);
    reset_but.setBitmaps(Bitmap(BITMAP_STST_ID), Bitmap(BITMAP_STTS_ID));

    flexButton1.setBoxWithBorderPosition(0, 0, 26, 24);
    flexButton1.setBorderSize(5);
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(76, 74, 209), touchgfx::Color::getColorFrom24BitRGB(61, 72, 186), touchgfx::Color::getColorFrom24BitRGB(179, 174, 252), touchgfx::Color::getColorFrom24BitRGB(191, 187, 255));
    flexButton1.setPosition(0, 89, 26, 24);
    flexButton1.setAction(flexButtonCallback);

    flexButton1_1.setBoxWithBorderPosition(0, 0, 26, 24);
    flexButton1_1.setBorderSize(5);
    flexButton1_1.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(230, 58, 27), touchgfx::Color::getColorFrom24BitRGB(230, 54, 22), touchgfx::Color::getColorFrom24BitRGB(255, 139, 134), touchgfx::Color::getColorFrom24BitRGB(255, 151, 132));
    flexButton1_1.setPosition(0, 0, 26, 24);
    flexButton1_1.setAction(flexButtonCallback);

    flexButton1_2.setBoxWithBorderPosition(0, 0, 26, 24);
    flexButton1_2.setBorderSize(5);
    flexButton1_2.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(237, 230, 39), touchgfx::Color::getColorFrom24BitRGB(245, 229, 57), touchgfx::Color::getColorFrom24BitRGB(255, 251, 204), touchgfx::Color::getColorFrom24BitRGB(255, 244, 176));
    flexButton1_2.setPosition(0, 248, 26, 24);

    flexButton1_3.setBoxWithBorderPosition(0, 0, 26, 24);
    flexButton1_3.setBorderSize(5);
    flexButton1_3.setBoxWithBorderColors(touchgfx::Color::getColorFrom24BitRGB(67, 204, 79), touchgfx::Color::getColorFrom24BitRGB(72, 217, 53), touchgfx::Color::getColorFrom24BitRGB(52, 252, 110), touchgfx::Color::getColorFrom24BitRGB(90, 214, 81));
    flexButton1_3.setPosition(0, 166, 26, 24);

    up_m.setXY(282, 174);
    up_m.setBitmaps(Bitmap(BITMAP_DOWN1_ID), Bitmap(BITMAP_DOWN2_ID));

    up_sec.setXY(165, 174);
    up_sec.setBitmaps(Bitmap(BITMAP_DOWN1_ID), Bitmap(BITMAP_DOWN2_ID));

    down_m.setXY(282, 70);
    down_m.setBitmaps(Bitmap(BITMAP_UP1_ID), Bitmap(BITMAP_UP2_ID));

    down_sec.setXY(165, 70);
    down_sec.setBitmaps(Bitmap(BITMAP_UP1_ID), Bitmap(BITMAP_UP2_ID));

    stop_but.setXY(51, 10);
    stop_but.setBitmaps(Bitmap(BITMAP_STT_ID), Bitmap(BITMAP_STOP1_ID));

    reset_but_1.setXY(321, 10);
    reset_but_1.setBitmaps(Bitmap(BITMAP_STTSST_ID), Bitmap(BITMAP_RESET1_ID));

    add(box1);
    add(minutes_val);
    add(colon);
    add(sec_val);
    add(down);
    add(reset_but);
    add(flexButton1);
    add(flexButton1_1);
    add(flexButton1_2);
    add(flexButton1_3);
    add(up_m);
    add(up_sec);
    add(down_m);
    add(down_sec);
    add(stop_but);
    add(reset_but_1);
}

void count_downViewBase::setupScreen()
{

}

void count_downViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &down)
    {

    }
    else if (&src == &reset_but)
    {

    }
    else if (&src == &up_m)
    {

    }
    else if (&src == &up_sec)
    {

    }
    else if (&src == &down_m)
    {

    }
    else if (&src == &down_sec)
    {

    }
    else if (&src == &stop_but)
    {

    }
    else if (&src == &reset_but_1)
    {

    }
}

void count_downViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton1)
    {
        //Interaction3
        //When flexButton1 clicked change screen to main
        //Go to main with no screen transition
        application().gotomainScreenNoTransition();
    }
    else if (&src == &flexButton1_1)
    {
        //Interaction1
        //When flexButton1_1 clicked change screen to alarm
        //Go to alarm with no screen transition
        application().gotoalarmScreenNoTransition();
    }
    else if (&src == &flexButton1_2)
    {

    }
    else if (&src == &flexButton1_3)
    {

    }
}
